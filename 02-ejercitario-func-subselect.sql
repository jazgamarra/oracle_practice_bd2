/*
El salario de cada empleado está dado por su posición, y la asignación de la categoría vigente
en dicha posición. Tanto la posición como la categoría vigente tienen la fecha fin nula – Un
solo salario está vigente en un momento dado). Tomando como base la lista de empleados,
verifique cuál es el salario máximo, el mínimo y el promedio. Formatee la salida para que se
muestren los puntos de mil.
*/ 
SELECT TO_CHAR(MAX(CAT.ASIGNACION), 'FM999,999,999') AS SALARIO_MAXIMO, 
TO_CHAR(MIN(CAT.ASIGNACION), 'FM999,999,999') AS SALARIO_MINIMO, 
TO_CHAR(AVG(NVL(CAT.ASIGNACION, '0')), 'FM999,999,999') AS SALARIO_PROMEDIO
FROM B_EMPLEADOS EMP 
JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
WHERE EMP.CEDULA_JEFE IS NOT NULL; 

/*
Basado en la consulta anterior, determine la mayor y menor asignación en cada área. Su
consulta tendrá: Nombre de área, Asignación Máxima, Asignación Mínima
*/
SELECT AR.NOMBRE_AREA AS NOMBRE, MAX(CAT.ASIGNACION) AS ASIG_MAXIMA, MIN(CAT.ASIGNACION) AS ASIG_MINIMA
FROM B_AREAS AR
JOIN B_POSICION_ACTUAL POS ON POS.ID_AREA = AR.ID 
JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
GROUP BY AR.NOMBRE_AREA;

/*
Determine el nombre y apellido, nombre de categoría, asignación y área del empleado (o
empleados) que tienen la máxima asignación vigente. Pruebe con un subquery normal, y luego
con la cláusula WITH: 
*/

-- con un subquery 
SELECT EMP.NOMBRE || ' ' || EMP.APELLIDO AS NOMBRE_COMPLETO, CAT.NOMBRE_CAT AS CATEGORIA, CAT.ASIGNACION, AR.NOMBRE_AREA  
FROM B_EMPLEADOS EMP
JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
JOIN B_AREAS AR ON POS.ID_AREA = AR.ID
WHERE EMP.CEDULA_JEFE IS NOT NULL AND CAT.ASIGNACION IN (
		SELECT MAX(CAT.ASIGNACION)
		FROM B_EMPLEADOS EMP
		JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
		JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
		WHERE EMP.CEDULA_JEFE IS NOT NULL
); 

-- con with 
WITH QUERY_EMPLEADOS AS 
(SELECT EMP.CEDULA, EMP.NOMBRE || ' ' || EMP.APELLIDO AS NOMBRE_COMPLETO, CAT.NOMBRE_CAT AS CATEGORIA, CAT.ASIGNACION, AR.NOMBRE_AREA
		FROM B_EMPLEADOS EMP
		JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
		JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
		JOIN B_AREAS AR ON POS.ID_AREA = AR.ID
		WHERE EMP.CEDULA_JEFE IS NOT NULL)
SELECT EMP.NOMBRE_COMPLETO, EMP.CATEGORIA, EMP.ASIGNACION, EMP.NOMBRE_AREA
FROM QUERY_EMPLEADOS EMP
WHERE EMP.ASIGNACION = (SELECT MAX(EMP.ASIGNACION) FROM QUERY_EMPLEADOS EMP);
	
/*
Determine el nombre y apellido, nombre de categoría, asignación y área del empleado (o
empleados) que tienen una asignación INFERIOR al promedio. Ordene por monto de salario en
forma DESCENDENTE. Intente la misma consulta con y sin WITH. 
*/

-- con subselects 
SELECT EMP.NOMBRE || ' ' || EMP.APELLIDO AS NOMBRE_COMPLETO, CAT.NOMBRE_CAT AS CATEGORIA, 
CAT.ASIGNACION, AR.NOMBRE_AREA AS AREA
FROM B_EMPLEADOS EMP
JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
JOIN B_AREAS AR ON POS.ID_AREA = AR.ID
WHERE EMP.CEDULA_JEFE IS NOT NULL AND CAT.ASIGNACION < ( SELECT AVG(NVL(CAT.ASIGNACION, 0))
	FROM B_EMPLEADOS EMP
	JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
	JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
	JOIN B_AREAS AR ON POS.ID_AREA = AR.ID )
ORDER BY ASIGNACION DESC; 

-- con with 
WITH LISTA_EMPLEADOS AS (SELECT EMP.NOMBRE || ' ' || EMP.APELLIDO AS NOMBRE_COMPLETO, CAT.NOMBRE_CAT AS CATEGORIA, 
	CAT.ASIGNACION, AR.NOMBRE_AREA AS AREA
	FROM B_EMPLEADOS EMP
	JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
	JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
	JOIN B_AREAS AR ON POS.ID_AREA = AR.ID)
SELECT NOMBRE_COMPLETO, CATEGORIA, ASIGNACION, AREA
FROM LISTA_EMPLEADOS 
WHERE ASIGNACION < (SELECT AVG(NVL(ASIGNACION, 0)) FROM LISTA_EMPLEADOS) 
ORDER BY ASIGNACION DESC; 

/*
Se necesita saber la cantidad de clientes que hay por cada localidad (Tenga en cuenta en la tabla
B_PERSONAS sólo aquellas que son clientes). Liste el id, la descripción de la localidad y la
cantidad de clientes. Asegúrese que se listen también las localidades que NO tienen clientes.
 */
-- hallar la cantidad de personas por localidad 
SELECT LOC.ID, LOC.NOMBRE, COUNT(*) AS CANTIDAD_CLIENTES
FROM B_PERSONAS PER
RIGHT JOIN B_LOCALIDAD LOC ON LOC.ID = PER.ID_LOCALIDAD 
WHERE PER.ES_CLIENTE = 'S'
GROUP BY LOC.ID, LOC.NOMBRE;

-- mostrar localidades sin clientes 
SELECT LOC.ID, LOC.NOMBRE, COUNT(*) AS CANTIDAD_CLIENTES
FROM B_PERSONAS PER
JOIN B_LOCALIDAD LOC ON LOC.ID = PER.ID_LOCALIDAD 
WHERE PER.ES_CLIENTE = 'S'
GROUP BY LOC.ID, LOC.NOMBRE
UNION 
SELECT ID, NOMBRE, 0 FROM B_LOCALIDAD 
ORDER BY ID;

/* 
Liste el volumen (cantidad) y monto de compras y ventas que se hicieron por cada artículo
durante el año 2011. Debe listar también los artículos que no tuvieron movimiento. Muestre
ID, ARTICULO NOMBRE ARTICULO CANT.COMPRAS MONTO COMPRAS CANT VENTAS
MONTO_VENTAS
*/
SELECT ART.ID, ART.NOMBRE, SUM(DVE.CANTIDAD) AS VOLUMEN_VENTAS, SUM(DVE.PRECIO*DVE.CANTIDAD) AS MONTO_VENTAS, 
SUM(DCO.CANTIDAD) AS VOLUMEN_COMPRAS, SUM(DCO.PRECIO_COMPRA*DCO.CANTIDAD) AS MONTO_COMPRAS
FROM B_ARTICULOS ART
JOIN B_DETALLE_VENTAS DVE ON DVE.ID_ARTICULO = ART.ID 
JOIN B_DETALLE_COMPRAS DCO ON DCO.ID_ARTICULO = ART.ID 
GROUP BY ART.NOMBRE, ART.ID ORDER BY ART.ID;



WITH SUB_VENTAS AS (
	SELECT AR.NOMBRE, EXTRACT(MONTH FROM VEN.FECHA) MES, DVE.CANTIDAD 
	FROM B_VENTAS VEN 
	JOIN B_DETALLE_VENTAS DVE ON DVE.ID_VENTA = VEN.ID 
	JOIN B_ARTICULOS AR ON DVE.ID_ARTICULO = AR.ID 
	WHERE EXTRACT(YEAR FROM VEN.FECHA) = 2018
) 
SELECT NOMBRE, 
 SUM(CASE WHEN MES=1 THEN CANTIDAD ELSE 0 END) AS ENERO, 
 SUM(CASE WHEN MES=2 THEN CANTIDAD ELSE 0 END) AS FEBRERO, 
 SUM(CASE WHEN MES=3 THEN CANTIDAD ELSE 0 END) AS MARZO, 
 SUM(CASE WHEN MES=4 THEN CANTIDAD ELSE 0 END) AS ABRIL, 
 SUM(CASE WHEN MES=5 THEN CANTIDAD ELSE 0 END) AS MAYO, 
 SUM(CASE WHEN MES=6 THEN CANTIDAD ELSE 0 END) AS JUNIO, 
 SUM(CASE WHEN MES=7 THEN CANTIDAD ELSE 0 END) AS JULIO, 
 SUM(CASE WHEN MES=8 THEN CANTIDAD ELSE 0 END) AS AGOSTO, 
 SUM(CASE WHEN MES=9 THEN CANTIDAD ELSE 0 END) AS SEPTIEMBRE, 
 SUM(CASE WHEN MES=10 THEN CANTIDAD ELSE 0 END) AS OCTUBRE, 
 SUM(CASE WHEN MES=11 THEN CANTIDAD ELSE 0 END) AS NOVIEMBRE,
 SUM(CASE WHEN MES=12 THEN CANTIDAD ELSE 0 END) AS DICIEMBRE 
FROM SUB_VENTAS 
GROUP BY NOMBRE; 


/*
Se necesita la cantidad de funcionarios por área. Ordene en forma jerárquica e
*/

SELECT AR.ID, AR.NOMBRE_AREA, COUNT(POS.CEDULA) AS EMPLEADOS 
FROM B_AREAS AR 
JOIN B_POSICION_ACTUAL POS ON AR.ID = POS.ID_AREA 
WHERE POS.FECHA_FIN IS NULL 
START WITH AR.ID_AREA_SUPERIOR IS NULL 
CONNECT BY PRIOR AR.ID = AR.ID_AREA_SUPERIOR 
GROUP BY AR.ID, AR.NOMBRE_AREA;

/*
Liste todas las personas del departamento que dependen de Jose Caniza. Incluya no solamente a
los subordinados inmediatos, sino también a los que son jerárquicamente dependientes. Liste
cédula, nombre y apellido en orden jerárquico.
 */
SELECT EMP.CEDULA, EMP.NOMBRE, EMP.APELLIDO, EMP.CEDULA_JEFE 
FROM B_EMPLEADOS EMP
START WITH EMP.CEDULA = 952160
CONNECT BY PRIOR EMP.CEDULA = EMP.CEDULA_JEFE; 

/*
Modifique la consulta anterior para averiguar todas las personas que están en un nivel superior al
de Gloria Mendoza
*/
SELECT EMP.CEDULA, EMP.NOMBRE, EMP.APELLIDO, EMP.CEDULA_JEFE 
FROM B_EMPLEADOS EMP
START WITH EMP.CEDULA = 4099480
CONNECT BY EMP.CEDULA = PRIOR EMP.CEDULA_JEFE;

/*
Liste todas las personas que están en la misma localidad que la firma SERVIMEX. Debe listar
identificación (CÉDULA o RUC según tenga), Nombre, Apellido, Nombre Localidad
*/
SELECT NVL(PER.CEDULA, PER.RUC), PER.NOMBRE, PER.APELLIDO, ID_LOCALIDAD, LOC.NOMBRE 
FROM B_PERSONAS PER, B_LOCALIDAD LOC
WHERE PER.ID_LOCALIDAD = LOC.ID 
	AND PER.ID_LOCALIDAD = (SELECT ID_LOCALIDAD FROM B_PERSONAS WHERE UPPER(NOMBRE) LIKE 'SERVIMEX' );

/*
Necesitamos verificar si existen empleados que tienen categorías con asignación inferior al
salario mínimo. Liste Cédula, Apellido y Nombre (concatenados), categoría, nombre categoría,
asignación. El salario mínimo vigente es guaraníes 2041123.
*/
WITH LISTA_EMPLEADOS AS (SELECT EMP.NOMBRE || ' ' || EMP.APELLIDO AS NOMBRE_COMPLETO, CAT.NOMBRE_CAT AS CATEGORIA, 
	CAT.ASIGNACION, AR.NOMBRE_AREA AS AREA
	FROM B_EMPLEADOS EMP
	JOIN B_POSICION_ACTUAL POS  ON POS.CEDULA = EMP.CEDULA
	JOIN B_CATEGORIAS_SALARIALES CAT ON CAT.COD_CATEGORIA = POS.COD_CATEGORIA 
	JOIN B_AREAS AR ON POS.ID_AREA = AR.ID)
SELECT NOMBRE_COMPLETO, CATEGORIA, ASIGNACION, AREA
FROM LISTA_EMPLEADOS 
WHERE ASIGNACION < 2841123 -- no hay menores, cambie para probar 
ORDER BY ASIGNACION DESC;

	



