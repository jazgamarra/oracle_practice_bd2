/*
1. Desarrolle la función F_OBTENER_SALARIO, la cual, dada la cédula de un empleado, devuelve su
salario actual (recuerde que el salario actual está determinado por la posición vigente del empleado):
Posteriormente, seleccione cédula, nombre y apellido y salario de la tabla B_EMPLEADOS. El
salario deberá ser obtenido a través de la función creada
*/
CREATE OR REPLACE FUNCTION F_OBTENER_SALARIO (P_CEDULA NUMBER) RETURN NUMBER
IS 
	V_SALARIO NUMBER(12); 
BEGIN
	SELECT CAT.ASIGNACION INTO V_SALARIO
	FROM B_EMPLEADOS EMP, B_POSICION_ACTUAL POS, B_CATEGORIAS_SALARIALES CAT
	WHERE EMP.CEDULA = POS.CEDULA AND POS.COD_CATEGORIA = CAT.COD_CATEGORIA
	AND EMP.CEDULA = P_CEDULA AND POS.FECHA_FIN IS NULL; 

	RETURN V_SALARIO; 
END;

SELECT NOMBRE, APELLIDO, NVL(F_OBTENER_SALARIO (CEDULA), 0)
FROM B_EMPLEADOS 

/*
Dropee la función anterior, y realice el mismo SELECT utilizando la función en la cláusula WITH:
*/

-- Eliminar la funcion 
DROP FUNCTION F_OBTENER_SALARIO; 

-- Usando la clausula with 
WITH 
	FUNCTION F_OBTENER_SALARIO (P_CEDULA IN NUMBER) 
	RETURN NUMBER IS V_SALARIO NUMBER(12);  
BEGIN
	SELECT CAT.ASIGNACION INTO V_SALARIO
	FROM B_EMPLEADOS EMP, B_POSICION_ACTUAL POS, B_CATEGORIAS_SALARIALES CAT
	WHERE EMP.CEDULA = POS.CEDULA AND POS.COD_CATEGORIA = CAT.COD_CATEGORIA
	AND EMP.CEDULA = P_CEDULA AND POS.FECHA_FIN IS NULL; 

	RETURN V_SALARIO; 
END;

SELECT NOMBRE, APELLIDO, NVL(F_OBTENER_SALARIO (CEDULA), 0)
FROM B_EMPLEADOS; 

/* 
Cree el procedimiento P_AUMENTAR_SALARIOS que recibe como parámetro el porcentaje de
aumento, y lo aplica sobre la tabla de categorías.
*/

-- Crear el procedimiento 
CREATE OR REPLACE PROCEDURE P_AUMENTAR_SALARIOS(P_PORCENTAJE NUMBER) 
IS 
	CURSOR C_CATEGORIAS IS 
	SELECT COD_CATEGORIA, ASIGNACION FROM B_CATEGORIAS_SALARIALES; 
BEGIN 
	FOR CAT IN C_CATEGORIAS LOOP
		UPDATE B_CATEGORIAS_SALARIALES 
		SET ASIGNACION = ASIGNACION + ASIGNACION * (P_PORCENTAJE / 100) 
		WHERE COD_CATEGORIA = CAT.COD_CATEGORIA; 
	END LOOP; 
	COMMIT; 
END; 

-- Llamar al procedimiento 
BEGIN
	P_AUMENTAR_SALARIOS(50); 
END;


